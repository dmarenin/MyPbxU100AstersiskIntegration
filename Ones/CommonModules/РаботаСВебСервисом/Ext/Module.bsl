//dmarenin
&НаСервере
Функция init_call(jdata) Экспорт 
	
	ТехДанные = jdata; 
	
	ПараметрыВозврата = Новый Соответствие;
	
	ПараметрыВозврата.Вставить("in_params", jdata);
	
	Попытка 
		
		Данные = JSON.лПрочитатьJSON(jdata);
		
		НовоеСобытие = Документы.Событие.СоздатьДокумент();
		
		НовоеСобытие.Дата = ТекущаяДата();
		НовоеСобытие.ВидСобытия = Перечисления.ВидыСобытий.ВходящийЗвонок;
		НовоеСобытие.ЗвонокНачат = Истина;
		НовоеСобытие.ТипЗвонка = Справочники.ТипыЗвонков.ЗаписьНаПрием;
		НовоеСобытие.УспешностьЗвонка = Ложь;
		
		НовоеСобытие.НомерТелефона = Данные["CallerIDNum"];
		НовоеСобытие.ИдентификаторЗвонка = Данные["UniqueID"];
		
		Клиент = НайтиКлиента(НовоеСобытие.НомерТелефона);
		
		НовоеСобытие.Клиент = Клиент;
		
		НовоеСобытие.Записать();
		
		ПараметрыВозврата.Вставить("event", Строка(НовоеСобытие.Ссылка.УникальныйИдентификатор()));

	Исключение
		
		ПараметрыВозврата.Вставить("ErrorText", ОписаниеОшибки());
			
	КонецПопытки;
	
	Возврат ПараметрыВозврата;
	
КонецФункции
//dmarenin

//dmarenin
&НаСервере
Функция done_call(jdata) Экспорт 
	
	ТехДанные = jdata; 
	
	ПараметрыВозврата = Новый Соответствие;
	
	ПараметрыВозврата.Вставить("in_params", jdata);
	
	Попытка 
		
		Данные = JSON.лПрочитатьJSON(jdata);
		
		ИдентификаторЗвонка = Данные["UniqueID"];
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Событие.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Событие КАК Событие
		|ГДЕ
		|	Событие.Дата > &Дата
		|	И Событие.ИдентификаторЗвонка = &ИдентификаторЗвонка";
		
		Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("ИдентификаторЗвонка", ИдентификаторЗвонка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
			
			Событие = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			
			Событие.ЗвонокЗавершен = Истина;
			
			Событие.ДлительностьЗвонка = ТекущаяДата()-Событие.Дата; 
			
			Событие.Записать();
			
			ПараметрыВозврата.Вставить("event", Строка(Событие.УникальныйИдентификатор()));
			
		КонецЕсли;
		
	Исключение
		
		ПараметрыВозврата.Вставить("ErrorText", ОписаниеОшибки());
		
	КонецПопытки;
	
	Возврат ПараметрыВозврата;
	
КонецФункции
//dmarenin

//dmarenin
&НаСервере
Функция add_recordings(jdata) Экспорт 
	
	ТехДанные = jdata; 
	
	ПараметрыВозврата = Новый Соответствие;
	
	ПараметрыВозврата.Вставить("in_params", jdata);
	
	Попытка 
		
		Данные = JSON.лПрочитатьJSON(jdata);
		
		ИдентификаторЗвонка = Данные["UniqueID"];
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Событие.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Событие КАК Событие
		|ГДЕ
		|	Событие.Дата > &Дата
		|	И Событие.ИдентификаторЗвонка = &ИдентификаторЗвонка";
		
		Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("ИдентификаторЗвонка", ИдентификаторЗвонка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
			
			Событие = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			
			Событие.ЗаписьРазговора = Данные["path"];
			
			Событие.Записать();
			
			ПараметрыВозврата.Вставить("event", Строка(Событие.УникальныйИдентификатор()));
			
		КонецЕсли;
		
	Исключение
		
		ПараметрыВозврата.Вставить("ErrorText", ОписаниеОшибки());
		
	КонецПопытки;
	
	Возврат ПараметрыВозврата;
	
КонецФункции
//dmarenin

//dmarenin
&НаСервере
Функция ПолучитьНавиСсылку(Ссылка) экспорт
	
	НавиСсылка = ПолучитьНавигационнуюСсылку(Ссылка);
	ПоискПозиции = Найти(НавиСсылка, "ref=");
	НавиСсылка = Прав(НавиСсылка, стрДлина(НавиСсылка) - (ПоискПозиции + 3));
	
	Возврат НавиСсылка;
	
КонецФункции
//dmarenin

//dmarenin
&НаСервере
Функция НайтиКлиента(Телефон) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект Объект
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Поле3 ПОДОБНО &Поле3";
	
	Запрос.УстановитьПараметр("Поле3", "%"+Сред(Телефон, 2)+"%");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		
		Возврат ВыборкаДетальныеЗаписи.Объект;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции
//dmarenin

//dmarenin
&НаСервере
Процедура ЗарегистрироватьНомерТелефонаПользователя(ПараметрЗапуска) Экспорт 
	
	НомерТелефона = Сред(ПараметрЗапуска, 0 ,3);
	
	СтруктураЗаписи = Новый Структура;
	
	СтруктураЗаписи.Вставить("Период", ТекущаяДата());
	
	СтруктураЗаписи.Вставить("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	СтруктураЗаписи.Вставить("Номер", НомерТелефона);
	
	ОбменДаннымиСервер.ДобавитьЗаписьВРегистрСведений(СтруктураЗаписи, "НомераПользователей", Истина);
	
КонецПроцедуры
//dmarenin

//dmarenin
&НаСервере
Процедура ПривязатьНомерТелефонаКСокету() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НомераПользователейСрезПоследних.Номер КАК НомерТелефона
		|ИЗ
		|	РегистрСведений.НомераПользователей.СрезПоследних КАК НомераПользователейСрезПоследних
		|ГДЕ
		|	НомераПользователейСрезПоследних.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Прокси = Новый ИнтернетПрокси(Ложь);
		
		user = ПолучитьНавиСсылку(Пользователи.ТекущийПользователь());
		
		HTTPСоединение = Новый HTTPСоединение("192.168.180.150", 8099,,,Прокси, 3); 
		
		HTTPЗапрос = Новый HTTPЗапрос("/user/reg_phone?user="+user+"&phone="+ВыборкаДетальныеЗаписи.НомерТелефона);
		
		Попытка
			
			HTTPСоединение.Получить(HTTPЗапрос);
			
		Исключение
			
		КонецПопытки;
		
	КонецЕсли;
		
КонецПроцедуры
//dmarenin

//dmarenin
&НаСервере
Функция ПолучитьСсылкуИзБД(Имя, СтрокаСсылки, Тип) экспорт
	Если Тип = "Справочник" Тогда
		ПустаяСсылка = Справочники[Имя].ПустаяСсылка();
	ИначеЕсли Тип="Задача" Тогда 
		ПустаяСсылка = Задачи[Имя].ПустаяСсылка();
	ИначеЕсли Тип="БизнесПроцесс" Тогда 
		ПустаяСсылка = БизнесПроцессы[Имя].ПустаяСсылка();
	Иначе
		ПустаяСсылка = Документы[Имя].ПустаяСсылка();
	КонецЕсли;
	
	ВнутреннееПредставление = ЗначениеВСтрокуВнутр(ПустаяСсылка);
	Если СтрокаСсылки = "" Тогда
		Возврат ПустаяСсылка;
	КОнецЕсли;
	НашеПредставление = СтрЗаменить(ВнутреннееПредставление, "00000000000000000000000000000000", СтрокаСсылки);		                                                            
	
	Попытка
		НашаСсылка = ЗначениеИзСтрокиВнутр(НашеПредставление);
	Исключение
		НашаСсылка = ПустаяСсылка;
	КонецПопытки;
	
	Возврат НашаСсылка
КонецФункции
//dmarenin

&НаСервере
Функция ПолучитьОписаниеСобытия(ref) Экспорт 
	
	Событие = Документы.Событие.ПолучитьСсылку(Новый УникальныйИдентификатор(ref)); 
	
	Результат = Новый Структура;
	
	Результат.Вставить("Событие", Событие); 
	Результат.Вставить("Клиент", Событие.Клиент); 
	Результат.Вставить("НомерТелефона", Событие.НомерТелефона); 
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьСобытиеПоИд(unique_id) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Событие.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Событие КАК Событие
		|ГДЕ
		|	Событие.ИдентификаторЗвонка = &ИдентификаторЗвонка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Событие.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("ИдентификаторЗвонка", unique_id);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 

		Возврат ВыборкаДетальныеЗаписи.Ссылка;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

